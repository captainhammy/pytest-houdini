[tox]
env_list = py310,ruff-check,ruff-format-check,isort-check,mypy,docstring-check
no_package = true
labels =
    test = py310
    static = ruff-check,ruff-format-check,isort-check,mypy,docstring-check
    fix = ruff-format-run,isort-run,docstring-run

[gh-actions]
python =
    3.9: py39, ruff-check, ruff-format-check, isort-check, mypy, docstring-check
    3.10: py310, ruff-check, ruff-format-check, isort-check, mypy, docstring-check

[testenv]
allowlist_externals=
    echo
    hython
deps =
    .[test]
pass_env=*
set_env =
    # We need to explicitly setup the PYTHONPATH to include all the tox installed modules
    # because hython will not load them by default, unlike if we were just using a standard
    # Python interpreter.
    PYTHONPATH = {envsitepackagesdir}
commands =
    hython -m pytest tests/
    echo "View test coverage report at file://{toxinidir}/coverage_html_report/index.html"

[testenv:ruff-check]
deps = ruff
commands = ruff check --preview src/ tests/

[testenv:ruff-format-check]
deps = {[testenv:ruff-check]deps}
commands = ruff format --preview --check src/ tests/

[testenv:ruff-format-run]
deps = {[testenv:ruff-check]deps}
commands = ruff format --preview src/ tests/

[testenv:isort-check]
deps = isort
commands = isort --check src/ tests/ setup.py

[testenv:isort-run]
deps = {[testenv:isort-check]deps}
commands = isort src/ tests/ setup.py

[testenv:mypy]
deps =
    .[test]
    mypy
commands = mypy

[testenv:docstring-check]
deps = pydocstringformatter
commands = pydocstringformatter --exit-code src/

[testenv:docstring-run]
deps = {[testenv:docstring-check]deps}
commands = pydocstringformatter --write src/

[testenv:docs]
deps =
    -r docs/requirements.txt
commands =
    sphinx-build -b html -d {envtmpdir}/doctrees docs/ {envtmpdir}/html
    echo "Docs available at file://{envtmpdir}/html/index.html"
